package java.datastructure;


class list {
	private int score;
	private list next;
	
	list(){
		next = null;
		score = 0;
	}
	
	public int getScore(){
		return score;
	}
	
	public void setScore(int score){
		this.score = score;
	}
	
	public list getNext(){
		return next;
	}
	
	public void setNext(list next){
		this.next = next;
	}
	
}

class node extends list{
	private String name;
	
	node(){
		name = "";
	}
	
	public String getName(){
		return name;
	}
	
	public void setName(String name){
		this.name = name;
	}
	
}
public class _linkedList {
	public static node head;
	public static list _insertList(list head, int data){
		list obj = new list();
		obj.setScore(data);
		obj.setNext(head);
		head = obj;
		return head;
	}
	
	public static void _insertNode(String name, int data){
		node obj = new node();
		obj.setName(name);
		obj.setScore(data);
		obj.setNext(head);
		head = obj;
	}
	
	public static list sumLinkedList(list num1, list num2) {
		// TODO Auto-generated method stub
		list result = null;
		int sum;
		boolean flag = false;
		
		while(num1 != null || num2 != null){
			if(num1 != null && num2 !=null){
				System.out.println(num1.getScore());
				System.out.println(num2.getScore());
				
				if(flag)
					sum = num1.getScore() + num2.getScore() + 1;
				else
					sum = num1.getScore() + num2.getScore();
				if(sum >= 10)
					flag = true;
				else
					flag = false;
				result = _insertList(result, sum % 10);
				num1 = num1.getNext();
				num2 = num2.getNext();
			}
			else if(num1 != null){
				if(flag){
					sum = num1.getScore() + 1;
					if(sum >= 10)
						flag = true;
					else
						flag = false;
				}
				else{
					sum = num1.getScore();
					flag = false;
				}
				result = _insertList(result, sum % 10);
				num1 = num1.getNext();
			}
			else if(num2 != null){
				if(flag){
					sum = num2.getScore() + 1;
					if(sum >= 10)
						flag = true;
					else
						flag = false;
				}
				else{
					sum = num2.getScore();
					flag = false;
				}
				result = _insertList(result, sum % 10);
				num2 = num2.getNext();
			}
		}
		if(num1 == null && num2 == null && flag){
			result = _insertList(result, 1);
		}
		return result;
	}
	
	
	
	
}
